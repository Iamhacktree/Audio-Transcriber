package com.Project.audio_transcriber.controller;


import java.io.File;
import java.io.IOException;

import org.springframework.ai.openai.OpenAiAudioTranscriptionModel;
import org.springframework.ai.openai.api.OpenAiAudioApi;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

@RestController
@RequestMapping("/api/transcriber")
public class TranscriptionController {
	private final OpenAiAudioTranscriptionModel transcriptModel;
	
	//we get the model here
	public TranscriptionController(String api_key) {
		OpenAiAudioApi openAiAudioApi = new OpenAiAudioApi(System.getenv("spring.ai.openai.api-key"));
		this.transcriptModel = new OpenAiAudioTranscriptionModel(openAiAudioApi);
	}
	
	
	public ResponseEntity<String> transcribeAudio(@RequestParam("file") MultipartFile file) throws IOException{
		File tempFile = File.createTempFile("audio", ".wav");
		file.transferTo(tempFile);
		
		OpenAiAudioTranscriptionOptions = OpenAiAudioTranscriptionOptions.builder()
			    .responseFormat(TranscriptResponseFormat.TEXT)
			    .temperature(0f)
			    .build();
		return null;
		
	}
}
